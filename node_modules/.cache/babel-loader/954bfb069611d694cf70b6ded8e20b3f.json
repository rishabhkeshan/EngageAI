{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhkeshan/Documents/ISM Project/chatbob/frontend/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { run, getquestion, answer } from \"./axiosConfig\";\nimport background from \"./background.jpg\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  React.useEffect(() => {\n    document.title = \"Engage\";\n  });\n  const [theme, setTheme] = React.useState(\"dark\");\n  const themeVars = theme === \"dark\" ? {\n    app: {\n      backgroundColor: \"#D1B2C0\"\n    },\n    terminal: {\n      boxShadow: \"0 2px 5px #111\",\n      borderRadius: \"5px\"\n    },\n    window: {\n      backgroundColor: \"#000\",\n      color: \"#39ff14\"\n    },\n    field: {\n      backgroundColor: \"#000\",\n      color: \"#39ff14\",\n      fontWeight: \"normal\"\n    },\n    cursor: {\n      animation: \"1.02s blink-dark step-end infinite\"\n    }\n  } : {\n    app: {\n      backgroundImage: `url(${background})`\n    },\n    terminal: {\n      boxShadow: \"0 2px 5px #33333375\"\n    },\n    window: {\n      backgroundColor: \"#5F5C6D\",\n      color: \"#39ff14\"\n    },\n    field: {\n      backgroundColor: \"#E3E3E3\",\n      color: \"#474554\",\n      fontWeight: \"bold\"\n    },\n    cursor: {\n      animation: \"1.02s blink-light step-end infinite\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    style: themeVars.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"2vh\",\n        fontSize: \"5rem\"\n      },\n      children: \"EngageAI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"1.5rem\",\n        marginBottom: \"5vh\"\n      },\n      children: \"The developer's friendly frustration chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Terminal, {\n      theme: themeVars,\n      setTheme: setTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n/* Terminal */\n\n\n_s(App, \"6Y4yXN4nCmTEnvqDPJqGkQVWGMc=\");\n\n_c = App;\n\nconst Terminal = ({\n  theme,\n  setTheme\n}) => {\n  _s2();\n\n  const [maximized, setMaximized] = React.useState(false);\n  const [title, setTitle] = React.useState(\"EngageAI\");\n\n  const handleClose = () => window.location.href = \"https://codepen.io/HuntingHawk\";\n\n  const handleMinMax = () => {\n    setMaximized(!maximized);\n    document.querySelector(\"#field\").focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"terminal\",\n    style: maximized ? {\n      height: \"100vh\",\n      width: \"100vw\",\n      maxWidth: \"100vw\"\n    } : theme.terminal,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"window\",\n      style: theme.window,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn red\",\n        onClick: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"useless-btn\",\n        className: \"btn yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn green\",\n        onClick: handleMinMax\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"title\",\n        style: {\n          color: theme.window.color\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      theme: theme,\n      setTheme: setTheme,\n      setTitle: setTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Terminal, \"WneWINCdtHTqMmRoIfuj2g8xSGo=\");\n\n_c2 = Terminal;\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commandHistory: [],\n      commandHistoryIndex: 0,\n      fieldHistory: [{\n        text: `Heyyy, I'm Engage, your AI buddy. Let's \"chat\" and get going.`\n      }, {\n        text: \"Type HELP to see what all I can do.\",\n        hasBuffer: true\n      }],\n      userInput: \"\",\n      isMobile: false,\n      run: false\n    };\n    this.recognizedCommands = [{\n      command: \"help\",\n      purpose: \"Provides help information for React Terminal commands.\"\n    }, {\n      command: \"team\",\n      purpose: \"Meet the awesome folks who brought me alive.\"\n    }, {\n      command: \"chat\",\n      purpose: \"Let's talk about your day.\"\n    }, {\n      command: \"cls\",\n      purpose: \"Clears the screen.\"\n    }, {\n      command: \"affirmation\",\n      purpose: \"Positive start to your day.\"\n    }, {\n      command: \"about\",\n      isMain: true,\n      purpose: \"Get to know my tech stack.\"\n    }];\n    this.handleTyping = this.handleTyping.bind(this);\n    this.handleInputEvaluation = this.handleInputEvaluation.bind(this);\n    this.handleInputExecution = this.handleInputExecution.bind(this);\n    this.handleContextMenuPaste = this.handleContextMenuPaste.bind(this);\n  }\n\n  componentDidMount() {\n    if (typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1) {\n      this.setState(state => ({\n        isMobile: true,\n        fieldHistory: [...state.fieldHistory, {\n          isCommand: true\n        }, {\n          text: `Unfortunately due to this application being an 'input-less' environment, mobile is not supported. I'm working on figuring out how to get around this, so please bear with me! In the meantime, come on back if you're ever on a desktop.`,\n          isError: true,\n          hasBuffer: true\n        }]\n      }));\n    }\n\n    const userElem = document.querySelector(\"#field\"); // userElem.focus()\n\n    document.querySelector(\"#useless-btn\").addEventListener(\"click\", () => this.setState(state => ({\n      fieldHistory: [...state.fieldHistory, {\n        isCommand: true\n      }, {\n        text: \"SYS >> That button doesn't do anything.\",\n        hasBuffer: true\n      }]\n    })));\n  }\n\n  componentDidUpdate() {\n    const userElem = document.querySelector(\"#field\");\n    userElem.scrollTop = userElem.scrollHeight;\n  }\n\n  handleTyping(e) {\n    e.preventDefault();\n    const {\n      key,\n      ctrlKey,\n      altKey\n    } = e;\n    const forbidden = [...Array.from({\n      length: 12\n    }, (x, y) => `F${y + 1}`), \"ContextMenu\", \"Meta\", \"NumLock\", \"Shift\", \"Control\", \"Alt\", \"CapsLock\", \"Tab\", \"ScrollLock\", \"Pause\", \"Insert\", \"Home\", \"PageUp\", \"Delete\", \"End\", \"PageDown\"];\n\n    if (!forbidden.some(s => s === key) && !ctrlKey && !altKey) {\n      if (key === \"Backspace\") {\n        this.setState(state => state.userInput = state.userInput.slice(0, -1));\n      } else if (key === \"Escape\") {\n        this.setState({\n          userInput: \"\"\n        });\n      } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n        const {\n          commandHistory,\n          commandHistoryIndex\n        } = this.state;\n        const upperLimit = commandHistoryIndex >= commandHistory.length;\n\n        if (!upperLimit) {\n          this.setState(state => ({\n            commandHistoryIndex: state.commandHistoryIndex += 1,\n            userInput: state.commandHistory[state.commandHistoryIndex - 1]\n          }));\n        }\n      } else if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n        const {\n          commandHistory,\n          commandHistoryIndex\n        } = this.state;\n        const lowerLimit = commandHistoryIndex === 0;\n\n        if (!lowerLimit) {\n          this.setState(state => ({\n            commandHistoryIndex: state.commandHistoryIndex -= 1,\n            userInput: state.commandHistory[state.commandHistoryIndex - 1] || \"\"\n          }));\n        }\n      } else if (key === \"Enter\") {\n        const {\n          userInput\n        } = this.state;\n\n        if (userInput.length) {\n          this.setState(state => ({\n            commandHistory: userInput === \"\" ? state.commandHistory : [userInput, ...state.commandHistory],\n            commandHistoryIndex: 0,\n            fieldHistory: [...state.fieldHistory, {\n              text: userInput,\n              isCommand: true\n            }],\n            userInput: \"\"\n          }), () => this.handleInputEvaluation(userInput));\n        } else {\n          this.setState(state => ({\n            fieldHistory: [...state.fieldHistory, {\n              isCommand: true\n            }]\n          }));\n        }\n      } else {\n        this.setState(state => ({\n          commandHistoryIndex: 0,\n          userInput: state.userInput += key\n        }));\n      }\n    }\n  }\n\n  handleInputEvaluation(input) {\n    try {\n      const evaluatedForArithmetic = Math.evaluate(input);\n\n      if (!isNaN(evaluatedForArithmetic)) {\n        return this.setState(state => ({\n          fieldHistory: [...state.fieldHistory, {\n            text: evaluatedForArithmetic\n          }]\n        }));\n      }\n\n      throw Error;\n    } catch (err) {\n      const {\n        recognizedCommands,\n        giveError,\n        handleInputExecution\n      } = this;\n      const cleanedInput = input.toLowerCase().trim();\n      const dividedInput = cleanedInput.split(\" \");\n      const parsedCmd = dividedInput[0];\n      const parsedParams = dividedInput.slice(1).filter(s => s[0] !== \"-\");\n      const parsedFlags = dividedInput.slice(1).filter(s => s[0] === \"-\"); // const isError = !recognizedCommands.some(s => s.command === parsedCmd)\n      // if (isError) {\n      // \treturn this.setState(state => ({fieldHistory: [...state.fieldHistory, giveError('nr', input)]}))\n      // }\n\n      return handleInputExecution(cleanedInput, parsedCmd, parsedParams, parsedFlags);\n    }\n  }\n\n  handleInputExecution(fullText, cmd, params = [], flags = []) {\n    if (cmd === \"help\") {\n      if (params.length) {\n        if (params.length > 1) {\n          return this.setState(state => ({\n            fieldHistory: [...state.fieldHistory, this.giveError(\"bp\", {\n              cmd: \"HELP\",\n              noAccepted: 1\n            })]\n          }));\n        }\n\n        const cmdsWithHelp = this.recognizedCommands.filter(s => s.help);\n\n        if (cmdsWithHelp.filter(s => s.command === params[0]).length) {\n          return this.setState(state => ({\n            fieldHistory: [...state.fieldHistory, {\n              text: cmdsWithHelp.filter(s => s.command === params[0])[0].help,\n              hasBuffer: true\n            }]\n          }));\n        } else if (this.recognizedCommands.filter(s => s.command === params[0]).length) {\n          return this.setState(state => ({\n            fieldHistory: [...state.fieldHistory, {\n              text: [`No additional help needed for ${this.recognizedCommands.filter(s => s.command === params[0])[0].command.toUpperCase()}`, this.recognizedCommands.filter(s => s.command === params[0])[0].purpose],\n              hasBuffer: true\n            }]\n          }));\n        }\n\n        return this.setState(state => ({\n          fieldHistory: [...state.fieldHistory, this.giveError(\"up\", params[0].toUpperCase())]\n        }));\n      }\n\n      return this.setState(state => ({\n        fieldHistory: [...state.fieldHistory, {\n          text: [\"All commands:\", ...this.recognizedCommands.sort((a, b) => a.command.localeCompare(b.command)).map(({\n            command,\n            purpose\n          }) => `${command.toUpperCase()}${Array.from({\n            length: 15 - command.length\n          }, x => \".\").join(\"\")}${purpose}`), \"\", \"For help about a specific command, type HELP <CMD>, e.g. HELP PROJECT.\"],\n          hasBuffer: true\n        }]\n      }));\n    } else if (cmd === \"cls\") {\n      return this.setState({\n        fieldHistory: []\n      });\n    } else if (cmd === \"chat\") {\n      return this.setState(state => ({\n        fieldHistory: [...state.fieldHistory, {\n          text: `Enter your query, press \"exit\" to exit`,\n          hasBuffer: true\n        }],\n        run: true\n      })); //   const action = run()\n      //     .then((res) => {\n      //       return this.setState((state) => ({\n      //         fieldHistory: [\n      //           ...state.fieldHistory,\n      //           { text: res.data.question, isQuestion: true, hasBuffer: true },\n      //         ],\n      //         run: true,\n      //       }));\n      //     })\n      //     .catch((err) => {\n      //       return this.setState((state) => ({\n      //         fieldHistory: [...state.fieldHistory, this.giveError(\"api\", \"\")],\n      //       }));\n      //     });\n    } else if (cmd === \"team\") {\n      return this.setState(state => ({\n        fieldHistory: [...state.fieldHistory, {\n          text: `The cool nerd - Rishabh Keshan(19BCE2366)`,\n          hasBuffer: true\n        }, {\n          text: `The geeky techy - Anusha Verma Chandraju(19BCE0724)`,\n          hasBuffer: true\n        }, {\n          text: `The whacky coder - Swamita Gupta(19BCE0728)`,\n          hasBuffer: true\n        }]\n      }));\n    } else if (cmd === \"cmd\") {\n      return this.setState(state => ({\n        fieldHistory: [...state.fieldHistory, {\n          text: \"Launching new instance of the React Terminal...\",\n          hasBuffer: true\n        }]\n      }), () => window.open(\"https://localhost:3000\"));\n    } else if (cmd === \"theme\") {\n      const {\n        setTheme\n      } = this.props;\n\n      if (flags.length === 1 && [\"-d\", \"-dark\", \"-l\", \"-light\"].some(s => s === flags[0])) {\n        const themeToSet = flags[0] === \"-d\" || flags[0] === \"-dark\" ? \"dark\" : \"light\";\n        return this.setState(state => ({\n          fieldHistory: [...state.fieldHistory, {\n            text: `Set the theme to ${themeToSet.toUpperCase()} mode`,\n            hasBuffer: true\n          }]\n        }), () => setTheme(themeToSet));\n      }\n\n      return this.setState(state => ({\n        fieldHistory: [...state.fieldHistory, this.giveError(!flags.length ? \"nf\" : \"bf\", \"THEME\")]\n      }));\n    } else if (cmd === \"exit\") {\n      if (this.state.run) {\n        return this.setState(state => ({\n          fieldHistory: [...state.fieldHistory, {\n            text: `Stay positive, you got this`,\n            hasBuffer: true\n          }],\n          run: false\n        }));\n      } else {\n        return this.setState(state => ({\n          fieldHistory: [...state.fieldHistory, this.giveError(\"exitnorun\", cmd)]\n        }));\n      }\n    } else if (cmd === \"affirmation\") {\n      Axios.get(`https://dulce-affirmations-api.herokuapp.com/affirmation` // \"https://type.fit/api/quotes\"\n      ).then(res => {\n        console.log(res.data);\n        const affirmation = res.data[0].phrase;\n        return this.setState(state => ({\n          fieldHistory: [...state.fieldHistory, {\n            text: `${affirmation}`,\n            hasBuffer: true\n          }]\n        }));\n      });\n    } else if (cmd === \"about\") {\n      return this.setState(state => ({\n        fieldHistory: [...state.fieldHistory, {\n          text: [\"Hey there!\", `My name is Engage, I exist to help you boost your mood. My creators are noobs but I can't help it, they brought me alive. Anyway, are you ready to chat???`],\n          hasBuffer: true\n        }]\n      }));\n    } else {\n      if (this.state.run) {\n        //   Axios.get('https://api.dialogflow.com/v1/query?v=20150910&query=' + cmd + '&lang=en&sessionId=12345')\n        Axios.get(\"https://d319-35-245-255-157.ngrok.io/runModello?text=\" + cmd).then(res => {\n          console.log(res.data);\n          const answer = res.data.answer;\n          return this.setState(state => ({\n            fieldHistory: [...state.fieldHistory, {\n              text: `${answer}`,\n              hasBuffer: true\n            }]\n          }));\n        }); // answer(fullText)\n        //   .then((res) => {\n        //     return this.setState((state) => ({\n        //       fieldHistory: [\n        //         ...state.fieldHistory,\n        //         { text: res.data.question, isQuestion: true, hasBuffer: true },\n        //       ],\n        //       run: true,\n        //     }));\n        //   })\n        //   .catch((err) => {\n        //     return this.setState((state) => ({\n        //       fieldHistory: [...state.fieldHistory, this.giveError(\"api\", \"\")],\n        //     }));\n        //   });\n      } else {\n        return this.setState(state => ({\n          fieldHistory: [...state.fieldHistory, this.giveError(\"up\", cmd)]\n        }));\n      }\n    }\n  }\n\n  handleContextMenuPaste(e) {\n    e.preventDefault();\n\n    if (\"clipboard\" in navigator) {\n      navigator.clipboard.readText().then(clipboard => this.setState(state => ({\n        userInput: `${state.userInput}${clipboard}`\n      })));\n    }\n  }\n\n  giveError(type, extra) {\n    const err = {\n      text: \"\",\n      isError: true,\n      hasBuffer: true\n    };\n\n    if (type === \"nr\") {\n      err.text = `${extra} : The term or expression '${extra}' is not recognized. Check the spelling and try again. If you don't know what commands are recognized, type HELP.`;\n    } else if (type === \"nf\") {\n      err.text = `The ${extra} command requires the use of flags. If you don't know what flags can be used, type HELP ${extra}.`;\n    } else if (type === \"bf\") {\n      err.text = `The flags you provided for ${extra} are not valid. If you don't know what flags can be used, type HELP ${extra}.`;\n    } else if (type === \"bp\") {\n      err.text = `The ${extra.cmd} command requires ${extra.noAccepted} parameter(s). If you don't know what parameters to use, type HELP ${extra.cmd}.`;\n    } else if (type === \"up\") {\n      err.text = `The command ${extra} is not supported by the HELP utility.`;\n    } else if (type === \"api\") {\n      err.text = `Something is wrong, please try again.`;\n    } else if (type === \"exitnorun\") {\n      err.text = `\"Chat\" first and answer at least one question.`;\n    }\n\n    return err;\n  }\n\n  render() {\n    const {\n      theme\n    } = this.props;\n    const {\n      fieldHistory,\n      userInput\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"field\",\n      className: theme.app.backgroundColor === \"#333444\" ? \"dark\" : \"light\",\n      style: theme.field,\n      onKeyDown: e => this.handleTyping(e),\n      tabIndex: 0,\n      onContextMenu: e => this.handleContextMenuPaste(e),\n      children: [fieldHistory.map(({\n        text,\n        isCommand,\n        isError,\n        hasBuffer,\n        isEmotion,\n        isQuestion\n      }) => {\n        if (Array.isArray(text)) {\n          return /*#__PURE__*/_jsxDEV(MultiText, {\n            input: text,\n            isError: isError,\n            hasBuffer: hasBuffer,\n            isEmotion: isEmotion,\n            isQuestion: isQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Text, {\n          input: text,\n          isCommand: isCommand,\n          isError: isError,\n          hasBuffer: hasBuffer,\n          isEmotion: isEmotion,\n          isQuestion: isQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(UserText, {\n        input: userInput,\n        theme: theme.cursor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Text = ({\n  input,\n  isCommand,\n  isError,\n  hasBuffer,\n  isEmotion,\n  isQuestion\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isCommand && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"query\",\n      children: \"Engage>\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: !isCommand && isError ? \"error\" : isEmotion ? \"emotion\" : isQuestion ? \"question\" : \"\",\n      children: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 633,\n    columnNumber: 5\n  }, this), hasBuffer && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 649,\n    columnNumber: 19\n  }, this)]\n}, void 0, true);\n\n_c3 = Text;\n\nconst MultiText = ({\n  input,\n  isError,\n  hasBuffer,\n  isEmotion,\n  isQuestion\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [input.map(s => /*#__PURE__*/_jsxDEV(Text, {\n    input: s,\n    isError: isError,\n    isEmotion: isEmotion,\n    isQuestion: isQuestion\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 655,\n    columnNumber: 7\n  }, this)), hasBuffer && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 662,\n    columnNumber: 19\n  }, this)]\n}, void 0, true);\n\n_c4 = MultiText;\n\nconst UserText = ({\n  input,\n  theme\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"query\",\n    children: \"Me>\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 667,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    children: input\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 668,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"cursor\",\n    style: theme\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 669,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 666,\n  columnNumber: 3\n}, this);\n\n_c5 = UserText;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 673,\n  columnNumber: 17\n}, this), document.querySelector(\"#root\"));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Terminal\");\n$RefreshReg$(_c3, \"Text\");\n$RefreshReg$(_c4, \"MultiText\");\n$RefreshReg$(_c5, \"UserText\");","map":{"version":3,"sources":["/Users/rishabhkeshan/Documents/ISM Project/chatbob/frontend/src/index.js"],"names":["React","ReactDOM","run","getquestion","answer","background","Axios","App","useEffect","document","title","theme","setTheme","useState","themeVars","app","backgroundColor","terminal","boxShadow","borderRadius","window","color","field","fontWeight","cursor","animation","backgroundImage","marginBottom","fontSize","Terminal","maximized","setMaximized","setTitle","handleClose","location","href","handleMinMax","querySelector","focus","height","width","maxWidth","Field","Component","constructor","props","state","commandHistory","commandHistoryIndex","fieldHistory","text","hasBuffer","userInput","isMobile","recognizedCommands","command","purpose","isMain","handleTyping","bind","handleInputEvaluation","handleInputExecution","handleContextMenuPaste","componentDidMount","orientation","navigator","userAgent","indexOf","setState","isCommand","isError","userElem","addEventListener","componentDidUpdate","scrollTop","scrollHeight","e","preventDefault","key","ctrlKey","altKey","forbidden","Array","from","length","x","y","some","s","slice","upperLimit","lowerLimit","input","evaluatedForArithmetic","Math","evaluate","isNaN","Error","err","giveError","cleanedInput","toLowerCase","trim","dividedInput","split","parsedCmd","parsedParams","filter","parsedFlags","fullText","cmd","params","flags","noAccepted","cmdsWithHelp","help","toUpperCase","sort","a","b","localeCompare","map","join","open","themeToSet","get","then","res","console","log","data","affirmation","phrase","clipboard","readText","type","extra","render","isEmotion","isQuestion","isArray","Text","MultiText","UserText"],"mappings":"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","sourcesContent":["import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { run, getquestion, answer } from \"./axiosConfig\";\nimport background from \"./background.jpg\";\nimport Axios from \"axios\";\n\nconst App = () => {\n  React.useEffect(() => {\n    document.title = \"Engage\";\n  });\n  const [theme, setTheme] = React.useState(\"dark\");\n  const themeVars =\n    theme === \"dark\"\n      ? {\n          app: { backgroundColor: \"#D1B2C0\" },\n          terminal: { boxShadow: \"0 2px 5px #111\", borderRadius: \"5px\" },\n          window: { backgroundColor: \"#000\", color: \"#39ff14\" },\n          field: {\n            backgroundColor: \"#000\",\n            color: \"#39ff14\",\n            fontWeight: \"normal\",\n          },\n          cursor: { animation: \"1.02s blink-dark step-end infinite\" },\n        }\n      : {\n          app: { backgroundImage: `url(${background})` },\n          terminal: { boxShadow: \"0 2px 5px #33333375\" },\n          window: { backgroundColor: \"#5F5C6D\", color: \"#39ff14\" },\n          field: {\n            backgroundColor: \"#E3E3E3\",\n            color: \"#474554\",\n            fontWeight: \"bold\",\n          },\n          cursor: { animation: \"1.02s blink-light step-end infinite\" },\n        };\n\n  return (\n    <div id=\"app\" style={themeVars.app}>\n      <div style={{ marginBottom: \"2vh\", fontSize: \"5rem\" }}>EngageAI</div>\n      <div style={{ fontSize: \"1.5rem\", marginBottom: \"5vh\" }}>\n        The developer's friendly frustration chatbot\n      </div>\n\n      <Terminal theme={themeVars} setTheme={setTheme} />\n    </div>\n  );\n};\n\n/* Terminal */\nconst Terminal = ({ theme, setTheme }) => {\n  const [maximized, setMaximized] = React.useState(false);\n  const [title, setTitle] = React.useState(\"EngageAI\");\n  const handleClose = () =>\n    (window.location.href = \"https://codepen.io/HuntingHawk\");\n  const handleMinMax = () => {\n    setMaximized(!maximized);\n    document.querySelector(\"#field\").focus();\n  };\n\n  return (\n    <div\n      id=\"terminal\"\n      style={\n        maximized\n          ? { height: \"100vh\", width: \"100vw\", maxWidth: \"100vw\" }\n          : theme.terminal\n      }\n    >\n      <div id=\"window\" style={theme.window}>\n        <button className=\"btn red\" onClick={handleClose} />\n        <button id=\"useless-btn\" className=\"btn yellow\" />\n        <button className=\"btn green\" onClick={handleMinMax} />\n        <span id=\"title\" style={{ color: theme.window.color }}>\n          {title}\n        </span>\n      </div>\n      <Field theme={theme} setTheme={setTheme} setTitle={setTitle} />\n    </div>\n  );\n};\n\nclass Field extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commandHistory: [],\n      commandHistoryIndex: 0,\n      fieldHistory: [\n        {\n          text: `Heyyy, I'm Engage, your AI buddy. Let's \"chat\" and get going.`,\n        },\n        {\n          text: \"Type HELP to see what all I can do.\",\n          hasBuffer: true,\n        },\n      ],\n      userInput: \"\",\n      isMobile: false,\n      run: false,\n    };\n    this.recognizedCommands = [\n      {\n        command: \"help\",\n        purpose: \"Provides help information for React Terminal commands.\",\n      },\n      {\n        command: \"team\",\n        purpose: \"Meet the awesome folks who brought me alive.\",\n      },\n      {\n        command: \"chat\",\n        purpose: \"Let's talk about your day.\",\n      },\n      {\n        command: \"cls\",\n        purpose: \"Clears the screen.\",\n      },\n      {\n        command: \"affirmation\",\n        purpose: \"Positive start to your day.\",\n      },\n      {\n        command: \"about\",\n        isMain: true,\n        purpose: \"Get to know my tech stack.\",\n      },\n    ];\n    this.handleTyping = this.handleTyping.bind(this);\n    this.handleInputEvaluation = this.handleInputEvaluation.bind(this);\n    this.handleInputExecution = this.handleInputExecution.bind(this);\n    this.handleContextMenuPaste = this.handleContextMenuPaste.bind(this);\n  }\n  componentDidMount() {\n    if (\n      typeof window.orientation !== \"undefined\" ||\n      navigator.userAgent.indexOf(\"IEMobile\") !== -1\n    ) {\n      this.setState((state) => ({\n        isMobile: true,\n        fieldHistory: [\n          ...state.fieldHistory,\n          { isCommand: true },\n          {\n            text: `Unfortunately due to this application being an 'input-less' environment, mobile is not supported. I'm working on figuring out how to get around this, so please bear with me! In the meantime, come on back if you're ever on a desktop.`,\n            isError: true,\n            hasBuffer: true,\n          },\n        ],\n      }));\n    }\n\n    const userElem = document.querySelector(\"#field\");\n\n    // userElem.focus()\n\n    document.querySelector(\"#useless-btn\").addEventListener(\"click\", () =>\n      this.setState((state) => ({\n        fieldHistory: [\n          ...state.fieldHistory,\n          { isCommand: true },\n          { text: \"SYS >> That button doesn't do anything.\", hasBuffer: true },\n        ],\n      }))\n    );\n  }\n  componentDidUpdate() {\n    const userElem = document.querySelector(\"#field\");\n\n    userElem.scrollTop = userElem.scrollHeight;\n  }\n  handleTyping(e) {\n    e.preventDefault();\n\n    const { key, ctrlKey, altKey } = e;\n    const forbidden = [\n      ...Array.from({ length: 12 }, (x, y) => `F${y + 1}`),\n      \"ContextMenu\",\n      \"Meta\",\n      \"NumLock\",\n      \"Shift\",\n      \"Control\",\n      \"Alt\",\n      \"CapsLock\",\n      \"Tab\",\n      \"ScrollLock\",\n      \"Pause\",\n      \"Insert\",\n      \"Home\",\n      \"PageUp\",\n      \"Delete\",\n      \"End\",\n      \"PageDown\",\n    ];\n\n    if (!forbidden.some((s) => s === key) && !ctrlKey && !altKey) {\n      if (key === \"Backspace\") {\n        this.setState(\n          (state) => (state.userInput = state.userInput.slice(0, -1))\n        );\n      } else if (key === \"Escape\") {\n        this.setState({ userInput: \"\" });\n      } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n        const { commandHistory, commandHistoryIndex } = this.state;\n        const upperLimit = commandHistoryIndex >= commandHistory.length;\n\n        if (!upperLimit) {\n          this.setState((state) => ({\n            commandHistoryIndex: (state.commandHistoryIndex += 1),\n            userInput: state.commandHistory[state.commandHistoryIndex - 1],\n          }));\n        }\n      } else if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n        const { commandHistory, commandHistoryIndex } = this.state;\n        const lowerLimit = commandHistoryIndex === 0;\n\n        if (!lowerLimit) {\n          this.setState((state) => ({\n            commandHistoryIndex: (state.commandHistoryIndex -= 1),\n            userInput:\n              state.commandHistory[state.commandHistoryIndex - 1] || \"\",\n          }));\n        }\n      } else if (key === \"Enter\") {\n        const { userInput } = this.state;\n\n        if (userInput.length) {\n          this.setState(\n            (state) => ({\n              commandHistory:\n                userInput === \"\"\n                  ? state.commandHistory\n                  : [userInput, ...state.commandHistory],\n              commandHistoryIndex: 0,\n              fieldHistory: [\n                ...state.fieldHistory,\n                { text: userInput, isCommand: true },\n              ],\n              userInput: \"\",\n            }),\n            () => this.handleInputEvaluation(userInput)\n          );\n        } else {\n          this.setState((state) => ({\n            fieldHistory: [...state.fieldHistory, { isCommand: true }],\n          }));\n        }\n      } else {\n        this.setState((state) => ({\n          commandHistoryIndex: 0,\n          userInput: (state.userInput += key),\n        }));\n      }\n    }\n  }\n  handleInputEvaluation(input) {\n    try {\n      const evaluatedForArithmetic = Math.evaluate(input);\n\n      if (!isNaN(evaluatedForArithmetic)) {\n        return this.setState((state) => ({\n          fieldHistory: [\n            ...state.fieldHistory,\n            { text: evaluatedForArithmetic },\n          ],\n        }));\n      }\n\n      throw Error;\n    } catch (err) {\n      const { recognizedCommands, giveError, handleInputExecution } = this;\n      const cleanedInput = input.toLowerCase().trim();\n      const dividedInput = cleanedInput.split(\" \");\n      const parsedCmd = dividedInput[0];\n      const parsedParams = dividedInput.slice(1).filter((s) => s[0] !== \"-\");\n      const parsedFlags = dividedInput.slice(1).filter((s) => s[0] === \"-\");\n      // const isError = !recognizedCommands.some(s => s.command === parsedCmd)\n\n      // if (isError) {\n      // \treturn this.setState(state => ({fieldHistory: [...state.fieldHistory, giveError('nr', input)]}))\n      // }\n\n      return handleInputExecution(\n        cleanedInput,\n        parsedCmd,\n        parsedParams,\n        parsedFlags\n      );\n    }\n  }\n  handleInputExecution(fullText, cmd, params = [], flags = []) {\n    if (cmd === \"help\") {\n      if (params.length) {\n        if (params.length > 1) {\n          return this.setState((state) => ({\n            fieldHistory: [\n              ...state.fieldHistory,\n              this.giveError(\"bp\", { cmd: \"HELP\", noAccepted: 1 }),\n            ],\n          }));\n        }\n\n        const cmdsWithHelp = this.recognizedCommands.filter((s) => s.help);\n\n        if (cmdsWithHelp.filter((s) => s.command === params[0]).length) {\n          return this.setState((state) => ({\n            fieldHistory: [\n              ...state.fieldHistory,\n              {\n                text: cmdsWithHelp.filter((s) => s.command === params[0])[0]\n                  .help,\n                hasBuffer: true,\n              },\n            ],\n          }));\n        } else if (\n          this.recognizedCommands.filter((s) => s.command === params[0]).length\n        ) {\n          return this.setState((state) => ({\n            fieldHistory: [\n              ...state.fieldHistory,\n              {\n                text: [\n                  `No additional help needed for ${this.recognizedCommands\n                    .filter((s) => s.command === params[0])[0]\n                    .command.toUpperCase()}`,\n                  this.recognizedCommands.filter(\n                    (s) => s.command === params[0]\n                  )[0].purpose,\n                ],\n                hasBuffer: true,\n              },\n            ],\n          }));\n        }\n\n        return this.setState((state) => ({\n          fieldHistory: [\n            ...state.fieldHistory,\n            this.giveError(\"up\", params[0].toUpperCase()),\n          ],\n        }));\n      }\n\n      return this.setState((state) => ({\n        fieldHistory: [\n          ...state.fieldHistory,\n          {\n            text: [\n              \"All commands:\",\n              ...this.recognizedCommands\n                .sort((a, b) => a.command.localeCompare(b.command))\n                .map(\n                  ({ command, purpose }) =>\n                    `${command.toUpperCase()}${Array.from(\n                      { length: 15 - command.length },\n                      (x) => \".\"\n                    ).join(\"\")}${purpose}`\n                ),\n              \"\",\n              \"For help about a specific command, type HELP <CMD>, e.g. HELP PROJECT.\",\n            ],\n            hasBuffer: true,\n          },\n        ],\n      }));\n    } else if (cmd === \"cls\") {\n      return this.setState({ fieldHistory: [] });\n    } else if (cmd === \"chat\") {\n\t\t\t  return this.setState((state) => ({\n\t\t\t\t  fieldHistory: [\n\t\t\t\t\t  ...state.fieldHistory,\n\t\t\t\t\t  {\n\t\t\t\t\t\t  text:`Enter your query, press \"exit\" to exit`,\t\n\t\t\t\t\t\t  hasBuffer: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\trun: true,\n\t\t\t\t}));\n\t\t\t\t\t\t\t\n    //   const action = run()\n    //     .then((res) => {\n    //       return this.setState((state) => ({\n    //         fieldHistory: [\n    //           ...state.fieldHistory,\n    //           { text: res.data.question, isQuestion: true, hasBuffer: true },\n    //         ],\n    //         run: true,\n    //       }));\n    //     })\n    //     .catch((err) => {\n    //       return this.setState((state) => ({\n    //         fieldHistory: [...state.fieldHistory, this.giveError(\"api\", \"\")],\n    //       }));\n    //     });\n    } else if (cmd === \"team\") {\n      return this.setState((state) => ({\n        fieldHistory: [\n          ...state.fieldHistory,\n          {\n            text: `The cool nerd - Rishabh Keshan(19BCE2366)`,\n            hasBuffer: true,\n          },\n          {\n            text: `The geeky techy - Anusha Verma Chandraju(19BCE0724)`,\n            hasBuffer: true,\n          },\n          {\n            text: `The whacky coder - Swamita Gupta(19BCE0728)`,\n            hasBuffer: true,\n          },\n        ],\n      }));\n    } else if (cmd === \"cmd\") {\n      return this.setState(\n        (state) => ({\n          fieldHistory: [\n            ...state.fieldHistory,\n            {\n              text: \"Launching new instance of the React Terminal...\",\n              hasBuffer: true,\n            },\n          ],\n        }),\n        () => window.open(\"https://localhost:3000\")\n      );\n    } else if (cmd === \"theme\") {\n      const { setTheme } = this.props;\n\n      if (\n        flags.length === 1 &&\n        [\"-d\", \"-dark\", \"-l\", \"-light\"].some((s) => s === flags[0])\n      ) {\n        const themeToSet =\n          flags[0] === \"-d\" || flags[0] === \"-dark\" ? \"dark\" : \"light\";\n\n        return this.setState(\n          (state) => ({\n            fieldHistory: [\n              ...state.fieldHistory,\n              {\n                text: `Set the theme to ${themeToSet.toUpperCase()} mode`,\n                hasBuffer: true,\n              },\n            ],\n          }),\n          () => setTheme(themeToSet)\n        );\n      }\n\n      return this.setState((state) => ({\n        fieldHistory: [\n          ...state.fieldHistory,\n          this.giveError(!flags.length ? \"nf\" : \"bf\", \"THEME\"),\n        ],\n      }));\n    } else if (cmd === \"exit\") {\n      if (this.state.run) {\n            return this.setState((state) => ({\n              fieldHistory: [\n                ...state.fieldHistory,\n                {\n                  text: `Stay positive, you got this`,\n                  hasBuffer: true,\n                },\n              ],\n              run: false,\n            }));\n      } else {\n        return this.setState((state) => ({\n          fieldHistory: [\n            ...state.fieldHistory,\n            this.giveError(\"exitnorun\", cmd),\n          ],\n        }));\n      }\n    } else if (cmd === \"affirmation\") {\n      Axios.get(\n        `https://dulce-affirmations-api.herokuapp.com/affirmation`\n        // \"https://type.fit/api/quotes\"\n      ).then((res) => {\n        console.log(res.data);\n        const affirmation = res.data[0].phrase;\n        return this.setState((state) => ({\n          fieldHistory: [\n            ...state.fieldHistory,\n            {\n              text: `${affirmation}`,\n              hasBuffer: true,\n            },\n          ],\n        }));\n      });\n    } else if (cmd === \"about\") {\n      return this.setState((state) => ({\n        fieldHistory: [\n          ...state.fieldHistory,\n          {\n            text: [\n              \"Hey there!\",\n              `My name is Engage, I exist to help you boost your mood. My creators are noobs but I can't help it, they brought me alive. Anyway, are you ready to chat???`,\n            ],\n            hasBuffer: true,\n          },\n        ],\n      }));\n    } else {\n      if (this.state.run) {\n\t\t//   Axios.get('https://api.dialogflow.com/v1/query?v=20150910&query=' + cmd + '&lang=en&sessionId=12345')\n\t\tAxios.get(\"https://d319-35-245-255-157.ngrok.io/runModello?text=\" + cmd).then((res) => {\n\t\t\tconsole.log(res.data);\n\t\t\tconst answer = res.data.answer;\n\t\t\treturn this.setState((state) => ({\n\t\t\t\tfieldHistory: [\n\t\t\t\t\t...state.fieldHistory,\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: `${answer}`,\n\t\t\t\t\t\thasBuffer: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}));\n\t\t}\n\t\t\t);\n\t\t  \n        // answer(fullText)\n        //   .then((res) => {\n        //     return this.setState((state) => ({\n        //       fieldHistory: [\n        //         ...state.fieldHistory,\n        //         { text: res.data.question, isQuestion: true, hasBuffer: true },\n        //       ],\n        //       run: true,\n        //     }));\n        //   })\n        //   .catch((err) => {\n        //     return this.setState((state) => ({\n        //       fieldHistory: [...state.fieldHistory, this.giveError(\"api\", \"\")],\n        //     }));\n        //   });\n\n      } else {\n        return this.setState((state) => ({\n          fieldHistory: [...state.fieldHistory, this.giveError(\"up\", cmd)],\n        }));\n      }\n    }\n  }\n  handleContextMenuPaste(e) {\n    e.preventDefault();\n\n    if (\"clipboard\" in navigator) {\n      navigator.clipboard.readText().then((clipboard) =>\n        this.setState((state) => ({\n          userInput: `${state.userInput}${clipboard}`,\n        }))\n      );\n    }\n  }\n  giveError(type, extra) {\n    const err = { text: \"\", isError: true, hasBuffer: true };\n\n    if (type === \"nr\") {\n      err.text = `${extra} : The term or expression '${extra}' is not recognized. Check the spelling and try again. If you don't know what commands are recognized, type HELP.`;\n    } else if (type === \"nf\") {\n      err.text = `The ${extra} command requires the use of flags. If you don't know what flags can be used, type HELP ${extra}.`;\n    } else if (type === \"bf\") {\n      err.text = `The flags you provided for ${extra} are not valid. If you don't know what flags can be used, type HELP ${extra}.`;\n    } else if (type === \"bp\") {\n      err.text = `The ${extra.cmd} command requires ${extra.noAccepted} parameter(s). If you don't know what parameters to use, type HELP ${extra.cmd}.`;\n    } else if (type === \"up\") {\n      err.text = `The command ${extra} is not supported by the HELP utility.`;\n    } else if (type === \"api\") {\n      err.text = `Something is wrong, please try again.`;\n    } else if (type === \"exitnorun\") {\n      err.text = `\"Chat\" first and answer at least one question.`;\n    }\n\n    return err;\n  }\n  render() {\n    const { theme } = this.props;\n    const { fieldHistory, userInput } = this.state;\n\n    return (\n      <div\n        id=\"field\"\n        className={theme.app.backgroundColor === \"#333444\" ? \"dark\" : \"light\"}\n        style={theme.field}\n        onKeyDown={(e) => this.handleTyping(e)}\n        tabIndex={0}\n        onContextMenu={(e) => this.handleContextMenuPaste(e)}\n      >\n        {fieldHistory.map(\n          ({ text, isCommand, isError, hasBuffer, isEmotion, isQuestion }) => {\n            if (Array.isArray(text)) {\n              return (\n                <MultiText\n                  input={text}\n                  isError={isError}\n                  hasBuffer={hasBuffer}\n                  isEmotion={isEmotion}\n                  isQuestion={isQuestion}\n                />\n              );\n            }\n\n            return (\n              <Text\n                input={text}\n                isCommand={isCommand}\n                isError={isError}\n                hasBuffer={hasBuffer}\n                isEmotion={isEmotion}\n                isQuestion={isQuestion}\n              />\n            );\n          }\n        )}\n        <UserText input={userInput} theme={theme.cursor} />\n      </div>\n    );\n  }\n}\nconst Text = ({\n  input,\n  isCommand,\n  isError,\n  hasBuffer,\n  isEmotion,\n  isQuestion,\n}) => (\n  <>\n    <div>\n      {isCommand && <div id=\"query\">Engage></div>}\n      <span\n        className={\n          !isCommand && isError\n            ? \"error\"\n            : isEmotion\n            ? \"emotion\"\n            : isQuestion\n            ? \"question\"\n            : \"\"\n        }\n      >\n        {input}\n      </span>\n    </div>\n    {hasBuffer && <div></div>}\n  </>\n);\nconst MultiText = ({ input, isError, hasBuffer, isEmotion, isQuestion }) => (\n  <>\n    {input.map((s) => (\n      <Text\n        input={s}\n        isError={isError}\n        isEmotion={isEmotion}\n        isQuestion={isQuestion}\n      />\n    ))}\n    {hasBuffer && <div></div>}\n  </>\n);\nconst UserText = ({ input, theme }) => (\n  <div>\n    <div id=\"query\">Me></div>\n    <span>{input}</span>\n    <div id=\"cursor\" style={theme}></div>\n  </div>\n);\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}